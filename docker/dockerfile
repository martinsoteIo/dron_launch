ARG CUDA_MAJOR="12"
ARG CUDA_MINOR="4"
ARG UBUNTU_RELEASE_YEAR="22"

FROM nvidia/cuda:${CUDA_MAJOR}.${CUDA_MINOR}.0-devel-ubuntu${UBUNTU_RELEASE_YEAR}.04 AS base

LABEL maintainer="MartÃ­n Sotelo"

ARG ROS_DISTRO="humble"
ARG USERNAME=admin
ARG USER_UID=1000
ARG USER_GID=1000

ENV DEBIAN_FRONTEND=noninteractive
ENV NVIDIA_DRIVER_CAPABILITIES=all
ENV NVIDIA_VISIBLE_DEVICES=all
ENV ROS_PYTHON_VERSION=3
ENV ROS_VERSION=2
ENV RMW_IMPLEMENTATION=rmw_cyclonedds_cpp

# Add ROS 2 repository and keyring first
RUN apt update && apt install -y software-properties-common curl gnupg lsb-release && \
    curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg && \
    echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(lsb_release -cs) main" | \
    tee /etc/apt/sources.list.d/ros2.list > /dev/null

# System dependencies (now ROS-related packages are available)
RUN apt-get update && apt-get install -y --no-install-recommends \
    sudo \
    git \
    curl \
    wget \
    bash-completion \
    libgl1 \
    libglib2.0-0 \
    python3-pip \
    python3-venv \
    python3-colcon-common-extensions \
    python3-rosdep \
    python3-rosinstall \
    python3-rosinstall-generator \
    python3-vcstool \
    python3-setuptools \
    python3-dev \
    gnupg \
    libx11-dev \
    libxext6 \
    libxrender1 \
    libxkbcommon-x11-0 \
    dbus-x11 \
    && rm -rf /var/lib/apt/lists/*

# Install ROS 2
RUN apt-get update && apt-get install -y --no-install-recommends \
    ros-${ROS_DISTRO}-desktop \
    && rm -rf /var/lib/apt/lists/*


# Copy entrypoint and setup scripts BEFORE changing user
COPY docker/entrypoint.sh /entrypoint.sh
COPY scripts/setup.sh /setup.sh
RUN chmod +x /entrypoint.sh /setup.sh

# ðŸ§± AÃ‘ADE archivos y permisos como root
RUN mkdir -p /home/admin/scripts
COPY ./scripts/setup.sh /home/admin/scripts/setup.sh
RUN chmod +x /home/admin/scripts/setup.sh

# âœ… AHORA CREA el usuario no root
RUN groupadd --gid $USER_GID $USERNAME && \
    useradd --uid $USER_UID --gid $USER_GID -m $USERNAME && \
    echo "$USERNAME ALL=(ALL) NOPASSWD:ALL" > /etc/sudoers.d/$USERNAME && \
    chmod 0440 /etc/sudoers.d/$USERNAME && \
    usermod -aG video,plugdev,sudo $USERNAME && \
    chown -R ${USER_UID}:${USER_GID} /home/${USERNAME}

RUN chown -R ${USER_UID}:${USER_GID} /home/${USERNAME}

# âœ… CAMBIA de usuario ya creado
USER $USERNAME
WORKDIR /home/$USERNAME


# Setup ROS 2 in .bashrc
RUN echo "source /opt/ros/${ROS_DISTRO}/setup.bash" >> /home/${USERNAME}/.bashrc && \
    echo 'export RCUTILS_COLORIZED_OUTPUT=1' >> /home/${USERNAME}/.bashrc && \
    echo 'force_color_prompt=yes' >> /home/${USERNAME}/.bashrc && \
    echo '' >> /home/${USERNAME}/.bashrc && \
    echo 'if [ "$force_color_prompt" = yes ]; then' >> /home/${USERNAME}/.bashrc && \
    echo '  PS1="\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\\$ "' >> /home/${USERNAME}/.bashrc && \
    echo 'fi' >> /home/${USERNAME}/.bashrc

# Run setup script during build (optional)
# RUN /setup.sh

ENTRYPOINT ["/entrypoint.sh"]
CMD ["bash"]
